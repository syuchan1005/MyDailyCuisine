scalar Upload
scalar Date
scalar Time
scalar DateTime

directive @constraint(
  # String
  minLength: Int
  maxLength: Int
  startsWith: String
  endsWith: String
  contains: String
  notContains: String
  pattern: String
  format: String ## byte, date-time, date, email, ipv4, ipv6, uri, uuid
  # Int/Float
  min: Int
  max: Int
  exclusiveMin: Int
  exclusiveMax: Int
  multipleOf: Int
) on INPUT_FIELD_DEFINITION | ARGUMENT_DEFINITION

type Query {
  ## RecipeMiddleware
  recipes: [Recipe!]!
  recipe(id: ID!): Recipe

  ## MealMiddleware
  meals: [Meal!]!
}

type Mutation {
  ## RecipeMiddleware
  addRecipe(recipe: InputRecipe!): Result!

  ## MealMiddleware
  addMeal(meal: InputMeal!): Result!

  ## AuthMiddleware
  signUp(
    name: String! @constraint(minLength: 5, maxLength: 20)
    password: String! @constraint(minLength: 8, maxLength: 60)
  ): TokenResult!
  logIn(
    name: String! @constraint(minLength: 5, maxLength: 20)
    password: String! @constraint(minLength: 8, maxLength: 60)
  ): TokenResult!
  refreshToken(refreshToken: String!): TokenResult!
  revokeToken(token: String!): Boolean!
}

type TokenResult {
  success: Boolean!
  code: String
  message: String
  token: Token
}

type Token {
  accessToken: String!
  refreshToken: String!
  expiresIn: Int!
}

type Result {
  success: Boolean!
  code: String
  message: String
}

type User {
  id: ID!
  name: String!
}

type Recipe {
  id: ID!
  image: Boolean!
  name: String!
  nameHiragana: String!
  description: String!
  howMany: String!
  trick: String!
  background: String!

  user: User
  steps: [RecipeStep!]
  ingredients: [RecipeIngredient!]
}

type RecipeStep {
  id: ID!
  step: Int!
  image: Boolean!
  description: String!

  recipe: Recipe
}

type RecipeIngredient {
  id: ID!
  amount: String!
  groupName: String
  ingredient: Ingredient!
}

type Ingredient {
  id: ID!
  name: String!
}

type Meal {
  id: ID!
  time: DateTime!
  name: String!
  description: String!

  recipe: Recipe
}

input InputRecipe {
  image: Upload
  name: String! @constraint(maxLength: 20)
  nameHiragana: String! @constraint(maxLength: 60)
  description: String! @constraint(maxLength: 60)
  howMany: String! @constraint(maxLength: 10)
  trick: String! @constraint(maxLength: 120)
  background: String! @constraint(maxLength: 120)

  steps: [InputRecipeStep!]!
  ingredients: [InputIngredient!]!
}

input InputRecipeStep {
  step: Int!
  image: Upload
  description: String! @constraint(maxLength: 60)
}

input InputIngredient {
  name: String! @constraint(maxLength: 100)
  amount: String! @constraint(maxLength: 50)
  groupName: String @constraint(maxLength: 30)
}

input InputMeal {
  time: DateTime!
  name: String! @constraint(maxLength: 120)
  description: String! @constraint(maxLength: 120)
  recipeId: ID!
}
